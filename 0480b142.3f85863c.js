(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{52:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(6),i=(n(0),n(76)),o={id:"faq",title:"ChiaLisp and CLVM FAQ",sidebar_label:"ChiaLisp and CLVM FAQ"},c={unversionedId:"faq",id:"faq",isDocsHomePage:!1,title:"ChiaLisp and CLVM FAQ",description:"Q: Why is my number being evaluated to (), a.k.a. nil?",source:"@site/docs/faq.md",slug:"/faq",permalink:"/docs/faq",editUrl:"https://github.com/Chia-Network/chialisp-web/edit/master/docs/faq.md",version:"current",sidebar_label:"ChiaLisp and CLVM FAQ",sidebar:"someSidebar",previous:{title:"CLVM Reference Manual",permalink:"/docs/ref/opcodes"}},s=[],l={rightToc:s};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Q:")," Why is my number being evaluated to ",Object(i.b)("inlineCode",{parentName:"p"},"()"),", a.k.a. ",Object(i.b)("inlineCode",{parentName:"p"},"nil"),"?"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"A:")," In clvm (the ",Object(i.b)("inlineCode",{parentName:"p"},"brun")," command), integers are evaluated as references to arguments in the argument tree.\nIf no argument tree is given on the command line, the default is an empty argument tree. When an argument is not found, ",Object(i.b)("inlineCode",{parentName:"p"},"nil")," is returned.\nIn ChiaLisp (the ",Object(i.b)("inlineCode",{parentName:"p"},"run")," command), integers are compiled to quoted atoms, which will give you the value you expected."),Object(i.b)("hr",null),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Q:")," Is it possible to store data or maintain state in smart contracts?"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"A:"),' Yes, but probably not how you are thinking.\nQuite deliberately the ChiaLisp environment is designed so that state is stored exclusively in coins.\nRemember Chia uses smart coins, not smart contracts. This leads to a different kind of design to smart contracts.\nA common design pattern in Chia smart coins is that they will recreate themselves with the same puzzle but with some "state" changed.'),Object(i.b)("hr",null),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Q:")," What is the difference between ChiaLisp, CLVM, and the Conditions Language?"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"A:")," ChiaLisp is the higher level language which can be compiled into the lower level language called CLVM.\nWhen CLVM is run on the network, it can use a language called the Conditions Language to declare certain requirements be met.\nThe conditions language are a series of statements which are evaluated all at the same time."))}u.isMDXComponent=!0},76:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,d=p["".concat(o,".").concat(m)]||p[m]||b[m]||i;return n?a.a.createElement(d,c(c({ref:t},l),{},{components:n})):a.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);